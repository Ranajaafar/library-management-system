{
  "openapi": "3.0.1",
  "info": {
    "title": "Library Management System",
    "description": "Operations pertaining to librarian in the system",
    "contact": {
      "name": "Rana Jaafar",
      "url": "https://www.linkedin.com/in/rana-jaafar/",
      "email": "jaafarrrana220@gmail.com"
    },
    "version": "Custom API Version"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Configuration: Patron APIs",
      "description": "Patron management endpoints"
    },
    {
      "name": "Configuration: Borrowing APIs",
      "description": "Borrowing endpoints"
    },
    {
      "name": "Configuration: Authentication APIs",
      "description": "Librarian authentication endpoints"
    },
    {
      "name": "Configuration: Book APIs",
      "description": "Book management endpoints"
    }
  ],
  "paths": {
    "/api/return/{bookId}/patron/{patronId}": {
      "put": {
        "tags": [
          "Configuration: Borrowing APIs"
        ],
        "summary": "return api",
        "description": " Allow a patron to return a book.",
        "operationId": "returnBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "patronId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/patrons/{id}": {
      "get": {
        "tags": [
          "Configuration: Patron APIs"
        ],
        "summary": "Get a Patron by ID",
        "description": "Retrieve details of a specific Patron by ID.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatronDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Configuration: Patron APIs"
        ],
        "summary": "Update a patron",
        "description": "Update an existing patron's information.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatronRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Configuration: Patron APIs"
        ],
        "summary": "Remove a patron",
        "description": "Remove a patron from the library.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/books/{id}": {
      "get": {
        "tags": [
          "Configuration: Book APIs"
        ],
        "summary": "Get a Book by ID",
        "description": "Retrieve details of a specific book by ID.",
        "operationId": "getProduct_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "Configuration: Book APIs"
        ],
        "summary": "Update a book",
        "description": "Update an existing book's information.",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Configuration: Book APIs"
        ],
        "summary": "Remove a book",
        "description": "Remove a book from the library.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/patrons": {
      "get": {
        "tags": [
          "Configuration: Patron APIs"
        ],
        "summary": "Get all patrons",
        "description": " Retrieve a list of all patrons.",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatronDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Configuration: Patron APIs"
        ],
        "summary": "Add a patron",
        "description": "Add a new patron to the library.",
        "operationId": "issue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatronRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatronDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/librarian/auth/sign-up": {
      "post": {
        "tags": [
          "Configuration: Authentication APIs"
        ],
        "operationId": "registerLibrarian",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/librarian/auth/sign-in": {
      "post": {
        "tags": [
          "Configuration: Authentication APIs"
        ],
        "operationId": "authenticateLibrarian",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/borrow/{bookId}/patron/{patronId}": {
      "post": {
        "tags": [
          "Configuration: Borrowing APIs"
        ],
        "summary": "borrowing api",
        "description": " Allow a patron to borrow a book.",
        "operationId": "borrow",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "patronId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/books": {
      "get": {
        "tags": [
          "Configuration: Book APIs"
        ],
        "summary": "Get all books",
        "description": " Retrieve a list of all books.",
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "Configuration: Book APIs"
        ],
        "summary": "Add a book",
        "description": "Add a new book to the library.",
        "operationId": "issue_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PatronRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^\\+?[1-9]\\d{1,14}$",
            "type": "string"
          }
        }
      },
      "BookRequest": {
        "required": [
          "description",
          "isbn",
          "language",
          "publicationDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "isbn": {
            "pattern": "\\d{10,13}",
            "type": "string"
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "publicationDate": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "enum": [
              "ARABIC",
              "ENGLISH",
              "FRENCH"
            ]
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PatronDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "SignupRequest": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "pattern": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$",
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "JwtResponse": {
        "type": "object",
        "properties": {
          "jwtToken": {
            "type": "string"
          }
        }
      },
      "BookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isbn": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "publicationDate": {
            "type": "string",
            "format": "date-time"
          },
          "language": {
            "type": "string",
            "enum": [
              "ARABIC",
              "ENGLISH",
              "FRENCH"
            ]
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}